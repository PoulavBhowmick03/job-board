generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  password   String 
  avatar     String?
  isVerified Boolean @default(false)
  role       Role    @default(USER)
  jobs       Job[]
}

model Job {  
  id                  String        @id @default(cuid())
  userId              String
  title               String
  description         String?
  companyName         String        @map("company_name")
  workMode            WorkMode      @map("work_mode")
  jobType             JobType       @map("job_type")
  experienceLevel     ExperienceLevel @map("experience_level")
  location            String
  currency            Currency      @default(INR)
  hasSalaryRange      Boolean       @default(false) @map("has_salary_range")
  minSalary           Int?
  maxSalary           Int?
  requiredSkills      String[]      @map("required_skills")
  educationLevel      String?       @map("education_level")
  yearsOfExperience   Int           @map("years_of_experience")
  benefits            String[]
  numberOfOpenings    Int           @default(1) @map("number_of_openings")
  remoteWorkOption    Boolean       @default(false) @map("remote_work_option")
  applicationDeadline DateTime?     @map("application_deadline")
  travelRequirements  String?       @map("travel_requirements")
  isVerifiedJob       Boolean       @default(false) @map("is_verified_job")
  postedAt            DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  user                User          @relation(fields: [userId], references: [id])
}

enum Currency {
  INR
  USD
}

enum WorkMode {
  remote
  hybrid
  office
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  INTERNSHIP
}

enum ExperienceLevel {
  ENTRY
  MID_LEVEL
  SENIOR
  EXECUTIVE
}
enum Role {
  USER
  ADMIN
}